char *cd2(char **splitted, char *envp[])
{
    int pos = 0;
    int len1 = 0;
    int len2 = 0;
    char *tmp = NULL;
    char *rsl = NULL;
    int i = 0;

    for (; envp[pos] != NULL && my_strcmp(envp[pos], "HOME=\0") != 0; pos++);
    if (my_strcmp(envp[pos], "HOME=\0") == 0)
        tmp = (envp[pos] + 5);
    for (; splitted[2][len1] != '\0'; len1 += 1);
    for (; tmp[len2] != '\0'; len2 += 1);
    rsl = (char *)malloc((len1 + len2 + 1) * sizeof(char));
    rsl[(len1 + len2)] = '\0';
    for (; tmp[i] != '\0'; rsl[i] = tmp[i], i++);
    rsl[i++] = '/';
    pos = (splitted[2][1] == '\0') ? 1 : 2;
    for (; splitted[2][pos] != '\0'; rsl[i] = splitted[2][pos++], i++);
    return rsl;
}




int cd(char **splitted, char *envp[])
{
    char *path = NULL;
    char *tmp = NULL;

    if (splitted[2][0] != '/') {
        if (splitted[2][0] == '~')
            path = cd2(splitted, envp);
        else
            path = pathmaker(getcwd(NULL, 0), splitted[2]);
        tmp = splitted[2];
        splitted[2] = path;
        if (path == NULL)
            return 84;
    }
    if (cd_checker(splitted[2]) == 0)
        return chdir(splitted[2]);
    else if (cd_checker(splitted[2]) != 0) {
        splitted[2] = (tmp == NULL) ? splitted[2] : tmp;
        myputstr(splitted[2], 2);
        myputstr(": Permission denied", 0);
    }
}






int msetenv(char **envp[], cmd *cmds)
{
    int j = 0;
    int k = 0;
    int len = setenv_lenght(cmds);
    int pos = -5;
    char **rsl = copy(*envp, 2, &pos);

    if (rsl == NULL || pos == -5 || cmds->args_nb != 2 || len == -84)
        return error_disp(NULL, 2);
    rsl[pos] = (char *)malloc((len + 2) * sizeof(char));
    rsl[pos][(len + 1)] = '\0';
    for (; cmds->args[0][j] != '\0'; rsl[pos][j] = cmds->args[0][j], j++);
    rsl[pos][j++] = '=';
    if (cmds->args[1] != NULL)
        for (; cmds->args[1][k] != '\0'; rsl[pos][j++] = cmds->args[1][k++]);
    *envp = rsl;
}